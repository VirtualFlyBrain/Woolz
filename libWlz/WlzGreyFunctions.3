'\" t
.\" ident MRC HGU $Id$
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\" Project:    Woolz
.\" Title:      WlzGreyFunctions.3
.\" Date:       March 1999
.\" Author:     Richard Baldock
.\" Copyright:	1999 Medical Research Council, UK.
.\"		All rights reserved.
.\" Address:	MRC Human Genetics Unit,
.\"		Western General Hospital,
.\"		Edinburgh, EH4 2XU, UK.
.\" Purpose:    Woolz functions for modifying grey values.
.\" $Revision$
.\" Maintenance:Log changes below, with most recent at top of list.
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.TH "WlzGreyFunctions" 3 "Wed Sep 17 10:04:14 1997" "MRC HGU Woolz" "Woolz Procedure Library"
.SH NAME
WlzGreyInvertMinMax, WlzGreyNormalise, WlzGreyRange, WlzGreySetValue,
WlzGreySetRange, WlzGreyMask, WlzGreyTemplate
\- functions on the grey-values of a woolz object modifying values "in
place".
.SH SYNOPSIS
.nf
.sp
#include <Wlz.h>

WlzErrorNum WlzGreyInvertMinMax(
  WlzObject	*obj,
  WlzPixelV	min,
  WlzPixelV	max)

WlzErrorNum WlzGreyNormalise(
  WlzObject	*obj)

WlzErrorNum WlzGreyRange(WlzObject	*obj,
			 WlzPixelV	*min,
			 WlzPixelV	*max)

WlzErrorNum WlzGreySetValue(
  WlzObject	*obj,
  WlzPixelV	val)

WlzErrorNum WlzGreySetRange(
  WlzObject	*obj,
  WlzPixelV	min,
  WlzPixelV	max,
  WlzPixelV	Min,
  WlzPixelV	Max)

WlzObject *WlzGreyMask(
  WlzObject	*obj,
  WlzObject	*mask,
  WlzPixelV	maskVal,
  WlzErrorNum	*dstErr)

WlzObject *WlzGreyTemplate(
  WlzObject	*obj,
  WlzObject	*tmpl,
  WlzPixelV	tmplVal,
  WlzErrorNum	*dstErr)

.fi
.SH ARGUMENTS
.LP
.BI " " obj "		object pointer."
.LP
.BI " " mask "		mask object pointer."
.LP
.BI " " templ "		template object pointer."
.LP
.BI " " min "		minimum pixel value, passed or returned."
.LP
.BI " " max "		maximum pixel value, passed or returned."
.LP
.BI " " Min "		minimum pixel value in destination object."
.LP
.BI " " Max "		maximum pixel value in destination object."
.LP
.BI " " val "		pixel value (to be set)."
.LP
.BI " " maskVal "	mask pixel value (to be set)."
.LP
.BI " " tmplVal "	template pixel value (to be set)."
.LP
.BI " " dstErr "	pointer for returned error value"
.LP
.SH MT-LEVEL
.LP
Unsafe
.SH DESCRIPTION
Procedures to manipulate grey-values "in-place". Many of the
procedures demand grey-values to define the required function and it
is the responsibility of the user to ensure the transformation is
legal and the value-table grey-type appropriate for the result.
.LP
.I WlzGreyInvertMinMax,
converts the grey-values of the given object according to the formula:
\fIg' = gmax + gmin - g\fR, where \fIg'\fR is the new value and
\fIg\fR the old. This is equivalent to reflection of the grey-value
about the mid-point between \fIgmin\fR and \fIgmax\fR. The background
value of the image is also changed. Calling the function twice with
the same parameters returns the grey-values to their original values.
.LP
.I WlzGreyRange,
returns the minimum and maximum grey-values in the object.
.LP
.I WlzGreyNormalise,
sets the grey-values of the object to the range 0-255. The grey-level
mapping is a simple linear interpolation from the objects grey-value
range onto 0-255. This is useful for conversion to UBYTE grey
type. For more general linear transformations use
\fIWlzGreySetRange\fR.
.I WlzGreySetRange,
linearly transforms the grey values from the range [min, max] to the
range [Min, Max]. It is assumed that the actual range of values in the
object is within the range [min, max]. This can be checked by a prior
call to \fIWlzGreyRange\fR, if the pixels lie outside this range then
the result is unpredictable. If min = max then a WLZ_ERR_FLOAT_DATA
error will be returned.
.I WlzGreySetValue,
sets the value of the grey-level object to val. The input object must
be either a 2D or 3D domain object with a valuetable.
.I WlzGreyMask,
applies the mask to the grey-values of the object by setting all
values within the intersection of obj and mask to the mask value.
The mask can be a domain, polygon or boundlist which will be converted
to domains by WlzPolyToObj and WlzBoundToObj respectively. A 2D mask
applied to a 3D object will be applied to each plane. A 3D mask
applied to a 2D object is an error.
.I WlzGreyTemplate,
fills the template with values from the object. Parts of the template
outside of the intersection with obj are set to the template value. A
2D template applied to a 3D object will result in a "prism" object
with each plane the domain of the template and the number of planes
determined by the object. A 3D template applied to a 2D object is an
error.
.SH EXAMPLES
.LP

.SH SEE ALSO
WlzError(3), WlzPolyToObj(3), WlzBoundToObj(3).
.SH BUGS

