.\" te
.\" ident MRC HGU $Id$
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\" Project:    Woolz
.\" Title:      Wlz3DViewUtils.3
.\" Date:       March 1999
.\" Author:     Richard Baldock
.\" Copyright:	1999 Medical Research Council, UK.
.\"		All rights reserved.
.\" Address:	MRC Human Genetics Unit,
.\"		Western General Hospital,
.\"		Edinburgh, EH4 2XU, UK.
.\" Purpose:    Woolz functions for computing Woolz affine transforms
.\"		that give the best fit, in a least squares sense, when
.\"		used to transform one set of verticies to another.
.\" $Revision$
.\" Maintenance:Log changes below, with most recent at top of list.
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.nh
.TH "WlzAffineTransformLSq" 3 "%G%" "MRC HGU Woolz" "Woolz Procedure Library"
.SH NAME
WlzAffineTransformLSq \- Woolz function for computing affine transforms from
verticies and  thier displacements.
.SH SYNOPSIS
.LP
.B #include <Wlz.h>
.LP
.BI "WlzAffineTransform *WlzAffineTransformLSq("
.in +4m
.br
.BI "int " nVtx0 ,
.BI "WlzDVertex2 *" "vtxVec0" ,
.BI "int " nVtx1 ,
.BI "WlzDVertex2 *" "vtxVec1" ,
.br
.BI "WlzTransformType " "trType" ,
.BI "WlzErrorNum " "wlzErr" );
.in -4m
.SH ARGUMENTS
.TS
tab(^);
lI l.
vtxVec0^first vector of verticies.
vtxVec1^second vector of verticies.
nVtx0^number of verticies in first vector
nVtx1^number of verticies in second vector
trType^required transform type.
wlzErr^Destination error code pointer, may be NULL.
.TE
.SH MT-LEVEL
.LP
Safe
.SH DESCRIPTION
.LP
.B WlzAffineTransformLSq
creates a new affine transform which gives the best fit, in a least squares
sense, when used to transform the first vector of verticies
to the second.
The transform type may be:
.TS 
tab(^);
lB l.
WLZ_TRANSFORM_2D_AFFINE^General 2D affine transform
WLZ_TRANSFORM_2D_REG^2D affine transform with only
^rotation and translation
WLZ_TRANSFORM_2D_TRANS^2D affine transform with only
^translation
.TE
.SH EXAMPLES
.LP
.ps -2
.cs B 24
.cs R 24
.nf

/* Simple example which computes the registration transform
* which best transforms the vertex vector
* {(1.0, 1.0), (2.0, 1.0), (2.0, 2.0)} to the vector
* {(3.1, 2.0), (3.0, 1.1), (4.1, 1.0)}
* The transform (tx = 3.09784, ty = 2.15156, theta = 1.62075)
* is then written to the standard output.
*/

#include <stdio.h>
#include <stdlib.h>
#include <Wlz.h>

int             main(char *argv[], int argc)
{
 WlzObject *trObj = NULL;
 WlzAffineTransform *trans = NULL;
 WlzDomain     trDomain;
 WlzValues     trValues;
 WlzErrorNum   errNum = WLZ_ERR_NONE;
 static WlzDVertex2 vtxVec0[3] =
 {{1.0, 1.0}, {2.0, 1.0}, {2.0, 2.0}},
               vtxVec1[3] =
 {{3.1, 2.0}, {3.0, 1.1}, {4.1, 1.0}};

 trDomain.core = NULL;
 trValues.core = NULL;
 if(((trans = WlzAffineTransformLSq(3, vtxVec0, 3, vtxVec1,
                                    WLZ_TRANSFORM_2D_REG,
                                    &errNum)) == NULL) ||
    (errNum != WLZ_ERR_NONE))
 {
   (void )fprintf(stderr,
                  "%s: failed to compute transform.\\n",
                  argv[0]);
 }
 else
 {
   trDomain.t = trans;
   if(((trObj = WlzMakeMain(WLZ_AFFINE_TRANS, trDomain, trValues,
                            NULL, NULL, &errNum)) == NULL) ||
      (errNum != WLZ_ERR_NONE))
   {
     (void )fprintf(stderr,
                    "%s: failed to make main object.\\n",
                    argv[0]);
   }
 }
 if(errNum == WLZ_ERR_NONE)
 {
   if((errNum = WlzWriteObj(stdout, trObj)) != WLZ_ERR_NONE)
   {
     (void )fprintf(stderr,
                    "%s: Failed to write transform object\\n",
                    *argv);
   }
 }
 if(trObj)
 {
   WlzFreeObj(trObj);
 }
 else if(trans)
 {
   (void )WlzFreeAffineTransform(trans);
 }
 return(errNum);
}

.fi
.cs R
.cs B
.ps +2
.SH SEE ALSO
WlzAffineTransform(3),
WlzError(3)
.SH BUGS
Still to be found.
