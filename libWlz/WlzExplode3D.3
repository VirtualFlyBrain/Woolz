'\" t
.\" ident MRC HGU $Id$
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\" Project:    Woolz							"
.\" Title:      WlzExplode3D.3			                      	"
.\" Date:       March 1999	                                    	"
.\" Author:     Bill Hill 				    		"
.\" Copyright:	1999 Medical Research Council, UK.			"
.\"		All rights reserved.					"
.\" Address:	MRC Human Genetics Unit,				"
.\"		Western General Hospital,				"
.\"		Edinburgh, EH4 2XU, UK.					"
.\" Version:	%I%							"
.\" Purpose:    Woolz function which explodes a 3D domain object into	"
.\"		2D domain objects.					"
.\" Maintenance:Log changes below, with most recent at top of list.	"
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.TH "WlzExplode3D" 3 "%G%" "MRC HGU Woolz" "Woolz Procedure Library"
.SH NAME
WlzExplode3D \- Explodes a 3D domain object into 2D domain objects.
.SH SYNOPSIS
.LP
.B #include <Wlz.h>
.LP
.BI "WlzErrorNum WlzExplode3D(WlzObject ***" "dstExpObjVecP" ,
.br
.in +4m
.BI "WlzObject *" "srcObj" ,
.BI "int *" "dstExpObjCount" );
.in -4m
.SH ARGUMENTS
.TS
tab(^);
lI l.
dstExpObjVecP^destination pointer for vector of exploded objects.
dstExpObjCount^destination pointer for number of exploded objects.
srcObj^source object pointer.
.TE
.SH MT-LEVEL
.LP
Safe
.SH DESCRIPTION
WlzExplode3D explodes the given 3D domain object into 2D domain
objects.
.SH EXAMPLES
.LP
.ps -2
.cs R 24
.nf
/*
 * Simple example of using WlzExplode3D().
 */

#include <stdio.h>
#include <stdlib.h>
#include <Wlz.h>

int             main(char *argv[], int argc)
{
  int           objIdx,
                objPlane,
                expObjCount;
  FILE          *fP = NULL;
  WlzObject     *inObj = NULL;
  WlzObject     **expObjVec = NULL;
  WlzErrorNum   errNum = WLZ_ERR_NONE;
  char          expObjFileStr[64];
  const char    expObjTemplate[] = "expObj.%06d.wlz";

  if((inObj= WlzReadObj(stdin, &errNum)) == NULL)
  {
    (void )fprintf(stderr,
                   "%s: Failed to read input object.\n",
                   *argv);
  }
  else
  {
    if((errNum = WlzExplode3D(&expObjCount, &expObjVec,
        inObj)) != WLZ_ERR_NONE)
    {
      (void )fprintf(stderr,
                     "%s: Failed to explode object.\n",
                     *argv);
    }
    else
    {
      objIdx = 0;
      objPlane = inObj->domain.p->plane1;
      while((objIdx < expObjCount) && (errNum == WLZ_ERR_NONE))
      {
	errNum = WLZ_ERR_WRITE_EOF;
        sprintf(expObjFileStr, expObjTemplate, objPlane);
        if(((fP = fopen(expObjFileStr, "w")) == NULL) ||
            ((errNum = WlzWriteObj(fP, *(expObjVec + objIdx))) != WLZ_ERR_NONE))
        {
          (void )fprintf(stderr,
                         "%s: Failed to write exploded object.\n",
                         *argv);
        }
        if(*(expObjVec + objIdx))
        {
          WlzFreeObj(*(expObjVec + objIdx));
        }
        if(fP)
        {
          fclose(fP);
          fP = NULL;
        }
        ++objIdx;
        ++objPlane;
      }
      AlcFree(expObjVec);
    }
    WlzFreeObj(inObj);
  }
  return(errNum);
}
.fi
.cs R
.ps +2
.SH SEE ALSO
WlzExplode3D(1), WlzConstruct3D(3), WlzError(3)
.SH BUGS
Still to be found.
