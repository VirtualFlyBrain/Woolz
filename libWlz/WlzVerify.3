'\" t
.\" ident MRC HGU $Id$
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\" Project:    Woolz
.\" Title:      WlzVerify.3
.\" Date:       March 1999
.\" Author:     Richard Baldock
.\" Copyright:	1999 Medical Research Council, UK.
.\"		All rights reserved.
.\" Address:	MRC Human Genetics Unit,
.\"		Western General Hospital,
.\"		Edinburgh, EH4 2XU, UK.
.\" Purpose:    Woolz functions to verify woolz object structures.
.\" $Revision$
.\" Maintenance:Log changes below, with most recent at top of list.
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.TH "WlzVerify" 3 "Fri Nov 29 09:47:11 1996" "MRC HGU Woolz" "Woolz Procedure Library"
.SH NAME
WlzVerifyObject, WlzVerifyIntervalDomain, WlzVerifyIntervalLine,
WlzVerifyInterval \- procedures to verify woolz object structures.
.SH SYNOPSIS
.nf
.sp
#include <Wlz.h>

WlzErrorNum 
WlzVerifyObject(WlzObject *obj, int fixFlg)

WlzErrorNum 
WlzVerifyIntervalDomain(WlzDomain domain, int fixFlg)

WlzErrorNum 
WlzVerifyIntervalLine(WlzIntervalLine *intvline, int fixFlg)

WlzErrorNum
WlzVerifyInterval(WlzInterval *interval, int fixFlg)

.fi
.SH ARGUMENTS
.LP
.BI " " obj "		object pointer."
.LP
.BI " " domain "        domain union."
.LP
.BI " " intvline "      interval line pointer."
.LP
.BI " " interval "      interval pointer."
.LP
.BI " " fixFlg "        error fix flag."
.LP
.SH MT-LEVEL
.LP
Unsafe
.SH DESCRIPTION
These procedures will check the data of a woolz object and if
\fIfixFlg\fR != zero will attempt to fix any errors found. All errors
are reported but only returned if it is not possible to fix the error.
If \fIfixFlg\fR == zero then the error is always returned. Passing an
object to \fIWlzVerifyObject\fR that it can't verify is not reported
as an error. If an error can be fixed then it is fixed "in place"
i.e. the object is modified.
.LP
.I WlzVerifyObject,
verify a top-level object, currently only 2D and 3D domain objects are
checked and the valuetables are ignored.
.LP
.I WlzVerifyIntervalDomain,
verifies an interval domain. Passing a domain with a NULL pointer is
an error. The bounding box is checked and may report BAD_LINE_BOUNDS
or BAD_COLUMN_BOUNDS. If fixed then the upper bound in each case is
set to the lower bound. Each interval line is verified by
\fIWlzVerifyIntervalLine\fR.
.LP
.I WlzVerifyIntervalLine,
verifies each interval line. Each interval line must be non-NULL and
have number of intervals >= 0. Each interval is checked by
\fIWlzVerifyInterval\fR then checked for overlap or touch with the
preceding interval (it is illegal for intervals to touch). Possible
errors are NULL_INTERVALLINE, BAD_INTERVALS_NUMBER,
BAD_ADJACENT_INTERVALS. Overlapping or touching intervals are fixed by
merging them.
.LP
.I WlzVerifyInterval,
check a single interval which must have both left and right offsets
greater than or equal to zero and the right offset greater then or
equal to the left offset. Possible errors are NULL_INTERVAL,
BAD_INTERVAL_BOUND, BAD_INTERVAL. Offsets less than zero are set to
zero and the right bound is fixed by setting it equal to the left
bound.

.SH EXAMPLES
.LP

.SH SEE ALSO
WlzError(3)
.SH BUGS

