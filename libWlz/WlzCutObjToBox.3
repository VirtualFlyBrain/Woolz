'\" t
.\" ident MRC HGU $Id$
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\" Project:    Woolz							"
.\" Title:      WlzCutObjToBox.3		                      	"
.\" Date:       March 1999	                                    	"
.\" Author:     Bill Hill 				    		"
.\" Copyright:	1999 Medical Research Council, UK.			"
.\"		All rights reserved.					"
.\" Address:	MRC Human Genetics Unit,				"
.\"		Western General Hospital,				"
.\"		Edinburgh, EH4 2XU, UK.					"
.\" Purpose:    Woolz functions for creating new domain objects with	"
.\"		rectangular value tables.				"
.\" $Revision$
.\" Maintenance:Log changes below, with most recent at top of list.	"
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.nh 3
.TH "WlzCutObjToBox" 3 "%G%" "MRC HGU Woolz" "Woolz Procedure Library"
.SH NAME
WlzCutObjToBox2D, WlzCutObjToBox3D \- Create a new object with a new
domain and rectangular valuetable.
.SH SYNOPSIS
.LP
.B #include <Wlz.h>
.LP
.BI "WlzObject *WlzCutObjToBox2D(WlzObject *" "srcObj" ,
.ti +10m
.BI "WlzIBox2 " "cutBox" ,
.BI "WlzGreyType " "dstGreyType" ,
.in +10m
.br
.BI "int " bgdNoise ", double " bgdMu ", double " bgdSigma ,
.br
.BI "WlzErrorNum *" "dstErrNum" );
.in -10m
.LP
.B #include <Wlz.h>
.LP
.BI "WlzObject *WlzCutObjToValBox2D(WlzObject *" "srcObj" ,
.ti +10m
.BI "WlzIBox2 " "cutBox" ,
.BI "WlzGreyType " "dstGreyType" ,
.in +10m
.br
.BI "void *" "valP" ,
.br
.BI "int " bgdNoise ", double " bgdMu ", double " bgdSigma ,
.br
.BI "WlzErrorNum *" "dstErrNum" );
.in -10m
.LP
.BI "WlzObject *WlzCutObjToBox3D(WlzObject *" "srcObj" ,
.ti +10m
.BI "WlzIBox3 " "cutBox" ,
.BI "WlzGreyType " "dstGreyType" ,
.in +10m
.br
.BI "int " bgdNoise ", double " bgdMu ", double " bgdSigma ,
.br
.BI "WlzErrorNum *" "dstErrNum" );
.in -10m
.LP
.BI "WlzObject *WlzCutObjToValBox3D(WlzObject *" "srcObj" ,
.ti +10m
.BI "WlzIBox3 " "cutBox" ,
.BI "WlzGreyType " "dstGreyType" ,
.in +10m
.br
.BI "void *" "valP" ,
.br
.BI "int " bgdNoise ", double " bgdMu ", double " bgdSigma ,
.br
.BI "WlzErrorNum *" "dstErrNum" );
.in -10m
.SH ARGUMENTS
.TS
tab(^);
lI l.
srcObj^source object pointer.
cutBox^given 2 or 3D cut box.
dstGreyType^required grey type for the value table.
valP^If non-NULL allocated space for grey values.
bgdNoise^If non-zero fills background with gaussian noise.
bgdMu^Mean of gaussian noise.
bgdSigma^Standard deviation of gaussian noise.
dstErrNum^destination pointer for error number, may be null.
.TE
.SH MT-LEVEL
.LP
Safe
.SH DESCRIPTION
These functions create new objects with new domains and
new rectangular value tables.
.LP
WlzCutObjToBox2D will only accept WLZ_EMPTY_OBJ and WLZ_2D_DOMAINOBJ objects.
WlzCutObjToBox3D will accept WLZ_EMPTY_OBJ, WLZ_2D_DOMAINOBJ and
WLZ_3D_DOMAINOBJ objects.
Any other object types provoke an error.
.LP
If the background noise flag is set then values cut from outside the object's
domain are set using the gaussian noise parameters. If the flag is not
set then these values are set to the given objects background value.
.LP
On error these functions return a NULL object pointer and may report
the following errors: NULL_OBJECT,
NULL_DOMAIN, INVALID_OBJECT_TYPE, INVALID_DOMAIN_TYPE,
and MEM_ALLOC_FAILED.

.SH EXAMPLES
.LP
.ps -2
.cs R 24
.nf
/*
 * Simple example of using WlzCutObjToBox3D() which cuts the object
 * read from the standard input to a 0-128 cube, with int value table
 * elements..
 */

#include <stdio.h>
#include <stdlib.h>
#include <Wlz.h>

int             main(char *argv[], int argc)
{
  WlzObject     *inObj = NULL,
                *outObj = NULL;
  WlzErrorNum   errNum = WLZ_ERR_NONE;
  WlzIBox3      box;

  box.xMin = 0;
  box.xMax = 128;
  box.yMin = 0;
  box.yMax = 128;
  box.zMin = 0;
  box.zMax = 128;
  if((inObj= WlzReadObj(stdin, &errNum)) == NULL)
  {
    (void )fprintf(stderr,
                   "%s: Failed to read input object.\\n",
                   *argv);
  }
  else if((outObj = WlzCutObjToBox3D(inObj, box, WLZ_GREY_INT,
                                     0, 0.0, 0.0,
                                     &errNum)) == NULL) ||
          (errNum != WLZ_ERR_NONE))
  {
    (void )fprintf(stderr,
                   "%s: Failed to cut object.\\n",
                   *argv);
  }
  else if((errNum = WlzWriteObj(stdout,
                                outObj)) != WLZ_ERR_NONE)
  {
    (void )fprintf(stderr,
                   "%s: Failed to write output object.\\n",
                   *argv);
  }
  return(errNum);
}
.fi
.cs R
.ps +2
.SH SEE ALSO
WlzClipObjToBox(1), WlzCutObjToBox(1),  WlzClipObjToBox(3), WlzError(3)
.SH BUGS
Still to be found.
