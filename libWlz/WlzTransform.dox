/*!
* \file         libWlz/WlzTransform.dox
* \author       Bill Hill
* \date         February 2012
* \version      $Id$
* \par
* Address:
*               MRC Human Genetics Unit,
*               MRC Institute of Genetics and Molecular Medicine,
*               University of Edinburgh,
*               Western General Hospital,
*               Edinburgh, EH4 2XU, UK.
* \par
* Copyright (C), [2012],
* The University Court of the University of Edinburgh,
* Old College, Edinburgh, UK.
* 
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2
* of the License, or (at your option) any later version.
*
* This program is distributed in the hope that it will be
* useful but WITHOUT ANY WARRANTY; without even the implied
* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
* PURPOSE.  See the GNU General Public License for more
* details.
*
* You should have received a copy of the GNU General Public
* License along with this program; if not, write to the Free
* Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
* Boston, MA  02110-1301, USA.
* \brief        Documentation for the WlzTransform module.
* \ingroup	Wlz
* \defgroup	WlzTransform	WlzTransform
* Woolz transforms are Woolz domains 
* that define either 2D or 3D spatial transformation.
*
* An affine transform is a transformation
* which preserves lines and the parralelism of lines,
* but not the lengths or the angles between (non parrallel) lines.
* The affine transform can be defined by a homogeneous matrix, which for
* 2D transforms is a 3x3 matrix and for 3D transforms is a 4x4 matrix.
* However in a Woolz affine transform the homogeneous matrix is
* always a allocated as a 4x4 matrix, with only the first 3 rows and
* columns used for a 2D transform.
*
* A mesh transform defines an approximate topology preseving transformation
* within the region covered by the mesh. The mesh itself consists of
* a number of nodes which are connected by simplical elements.
* The transform displaces each node of the mesh according to the node
* displacement and interpolates displacements within the mesh elements.
* It is particularly useful for implementing other transforms such as
* the basis function transforms. In 2D a mesh transform is defined by
* a triangular mesh, in 3D it is defined by a tetrahedral mesh.
*
* A basis function transform is the sum of a set of radialy symetric
* component transforms. With each component transform defined by node
* and some set of parameters which specify the displacement of points
* distant from the node, the displacements having radial symmetry. 
*/

