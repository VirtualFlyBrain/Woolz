'\" t
.\" ident MRC HGU $Id$
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\" Project:    Woolz
.\" Title:      WlzFree.3
.\" Date:       March 1999
.\" Author:     Richard Baldock
.\" Copyright:	1999 Medical Research Council, UK.
.\"		All rights reserved.
.\" Address:	MRC Human Genetics Unit,
.\"		Western General Hospital,
.\"		Edinburgh, EH4 2XU, UK.
.\" Purpose:    Woolz functions for freeing data structures.
.\" $Revision$
.\" Maintenance:Log changes below, with most recent at top of list.
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.TH WlzFree 3 "14th November 1996" "MRC HGU Woolz" "Woolz Procedure Library"
.SH NAME
WlzFreeObj, WlzFreeIntervalDomain, WlzFreeDomain, WlzFreePlaneDomain,
WlzFreeValueTb, WlzFreeValues, WlzFreeVoxelValueTb, WlzFreeHistogram,
WlzFreeConvHull, WlzFreePolyDmn, WlzFreeBoundList, WlzFreeWarpTrans,
WlzFreeFMatchObj, WlzFree3DWarpTrans, WlzFreeTransObj,
WlzFreeProperty, WlzFreeTransform
\- <brief summarizing text>.
.SH SYNOPSIS
.nf
.sp
#include <Wlz.h>

WlzErrorNum WlzFreeObj(WlzObject *obj)

WlzErrorNum WlzFreeIntervalDomain(WlzIntervalDomain *idom)

WlzErrorNum WlzFreeDomain(WlzDomain domain)

WlzErrorNum WlzFreePlaneDomain(WlzPlaneDomain *planedm)

WlzErrorNum WlzFreeValueTb(WlzRagRValues *vdmn)

WlzErrorNum WlzFreeValues(WlzValues values)

WlzErrorNum WlzFreeVoxelValueTb(WlzVoxelValues *voxtab)

WlzErrorNum WlzFreeHistogram(WlzHistogram *h)

WlzErrorNum WlzFreeConvHull(WlzConvHullValues *c)

WlzErrorNum WlzFreePolyDmn(WlzPolygonDomain *poly)

WlzErrorNum WlzFreeBoundList(WlzBoundList *b)

WlzErrorNum WlzFreeWarpTrans(WlzWarpTrans *obj)

WlzErrorNum WlzFreeFMatchObj(WlzFMatchObj *obj)

WlzErrorNum WlzFree3DWarpTrans(Wlz3DWarpTrans *obj)

WlzErrorNum WlzFreeProperty(WlzSimpleProperty *prop)

WlzErrorNum WlzFreeTransObj(WlzTransObj *obj)

WlzErrorNum WlzFreeTransform(WlzTransform *trans)

.fi
.SH ARGUMENTS
.LP
Each procedure takes a single argument which is the freed structure.
.SH MT-LEVEL
.LP
Unsafe
.SH DESCRIPTION
.LP
Each woolz structure has an associated space free procedure. Most
objects will be freed by WlzFreeObj but occasionally it is necessary
to call the specific freeing function for each structure, usually when
a new structure has just been allocated and an error occurs. A number
of woolz structures maintain a linkcount so multiple references can be
made to a single allocated block. These are the WlzObject, WlzDomain,
WlzValues and WlzProperty structures and should be assigned using the
corresponding WlzAssign (3) function to ensure proper use of the
linkcount. Just before actually freeing the space the linkcount value
is set to -1 which provides a possibility of detecting an attempt to
free space already freed but is clearly a serious error.
.LP
Not all procedures are listed below, only those for which some
additional constraints apply. All other can only free the structure
defined by the argument type. Note since woolz enumerated types are
not unique for different domains and valuetables the type is only
checked by WlzFreeObj therefore casting in order to pass an
alternative structure to one of these procedures will almost certainly
cause a fatal error.
.LP
.I WlzFreeDomain,
free a woolz domain, currently restricted to WlzIntervalDomain and
WlzRect which satify the constrain that all allocated space can be
freed using the freeptr.
.I WlzFreeValues,
free woolz values, currently restricted to WlzRagRValues and
WlzRectValues.
.LP
.SH EXAMPLES
.LP

.SH SEE ALSO
WlzMake(3), WlzError(3)
.SH BUGS

