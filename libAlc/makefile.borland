#
# Makefile for Borland.
#

CC			= bcc32

# Name of archive (library) to be built (modify as required).
ARCHIVE			= libAlc.lib

CFLAGS			= -I. -A -p-

all:			$(ARCHIVE)


# List of all 'C' source files (modify as required).
CSOURCES		= AlcAlloc.c \
			  AlcArray.c \
			  AlcBlockStack.c \
			  AlcCPQueue.c \
			  AlcDLPList.c \
			  AlcFreeStack.c \
			  AlcHashTable.c \
			  AlcKDTree.c \
			  AlcString.c \
			  AlcVector.c

# List of all 'C' source files (modify as required).
COBJECTS		= AlcAlloc.obj \
			  AlcArray.obj \
			  AlcBlockStack.obj \
			  AlcCPQueue.obj \
			  AlcDLPList.obj \
			  AlcFreeStack.obj \
			  AlcHashTable.obj \
			  AlcKDTree.obj \
			  AlcString.obj \
			  AlcVector.obj

#
#AlcAlloc.obj:		AlcAlloc.c Alc.h AlcProto.h
#			bcc32 $(CFLAGS) -c AlcAlloc.c
#
#AlcArray.obj:		AlcArray.c Alc.h AlcProto.h
#			bcc32 $(CFLAGS) -c AlcArray.c
#
#AlcBlockStack.obj:	AlcBlockStack.c Alc.h AlcProto.h
#			bcc32 $(CFLAGS) -c AlcBlockStack.c
#
#AlcCPQueue.obj:		AlcCPQueue.c Alc.h AlcProto.h
#			bcc32 $(CFLAGS) -c AlcCPQueue.c
#
#AlcDLPList.obj:		AlcDLPList.c Alc.h AlcProto.h
#			bcc32 $(CFLAGS) -c AlcDLPList.c
#
#AlcFreeStack.obj:	AlcFreeStack.c Alc.h AlcProto.h
#			bcc32 $(CFLAGS) -c AlcFreeStack.c
#
#AlcHashTable.obj:	AlcHashTable.c Alc.h AlcProto.h
#			bcc32 $(CFLAGS) -c AlcHashTable.c
#
#AlcKDTree.obj:		AlcKDTree.c Alc.h AlcProto.h
#			bcc32 $(CFLAGS) -c AlcKDTree.c
#
#AlcString.obj:		AlcString.c Alc.h AlcProto.h
#			bcc32 $(CFLAGS) -c AlcString.c
#
#AlcVector.obj:		AlcVector.c Alc.h AlcProto.h
#			bcc32 $(CFLAGS) -c AlcVector.c

$(ARCHIVE):		$(COBJECTS)
			tlib $(ARCHIVE) /C \
			+AlcAlloc.obj \
			+AlcArray.obj \
			+AlcBlockStack.obj \
			+AlcCPQueue.obj \
			+AlcDLPList.obj \
			+AlcFreeStack.obj \
			+AlcHashTable.obj \
			+AlcKDTree.obj \
			+AlcString.obj \
			+AlcVector.obj, Alc

%.obj:			%.c Alc.h AlcProto.h
			$(CC) $(CFLAGS) -c $(.SOURCE)

clean:			
			del *.obj *.i *.rsp *.LST *.lib
